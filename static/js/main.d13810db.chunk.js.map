{"version":3,"sources":["lib/handlers.ts","lib/DnDContainer.tsx","lib/DnDElement.tsx","App.tsx","index.tsx"],"names":["checkIsSameElement","source","target","checkIsDraggable","getAttribute","checkIsSameGroup","group","targetGroupElement","DnDContainer","container","shadowOpacity","transitionDuration","children","items","style","rest","marginBlockStart","marginBlockEnd","paddingInlineStart","listStyle","info","onDragStart","useCallback","e","event","opacity","currentTarget","dragStartHandler","onDragEnter","isUp","nextElementSibling","dy","offsetHeight","transition","transform","dragEnterHandler","onDragOver","preventDefault","onDrop","onDragLeave","position","insertAdjacentElement","dragLeaveHandler","onDragEnd","dragEndHandler","data-container","data-group","DnDElement","draggable","App","id","content","className","map","obj","key","ReactDOM","render","document","getElementById"],"mappings":"qPAAA,SAASA,EACPC,EACAC,GAEA,OAAOD,IAAWC,EAGpB,SAASC,EAAiBD,GAExB,MADyD,SAArCA,EAAOE,aAAa,aAI1C,SAASC,EACPC,EACAC,GAGA,OAAOD,IADaC,EAAmBH,aAAa,cCCtD,IA2DeI,EA3DuB,SAAC,GAShC,IARLC,EAQI,EARJA,UACAH,EAOI,EAPJA,MACAI,EAMI,EANJA,cACAC,EAKI,EALJA,mBAEAC,GAGI,EAJJC,MAII,EAHJD,UACAE,EAEI,EAFJA,MACGC,EACC,qGACJD,EAAK,aACHE,iBAAkB,MAClBC,eAAgB,MAChBC,mBAAoB,MACpBC,UAAW,QACRL,GAGL,IAAMM,EAA6B,CACjCnB,OAAQ,KACRK,MAAO,IAGHe,EAAcC,uBAClB,SAAAC,GAAC,ODrBE,SACLC,EACAJ,EACAK,GAEA,IAAMvB,EAASsB,EAAMtB,OAChBC,EAAiBD,KAEtBkB,EAAKd,MAAQkB,EAAME,cAActB,aAAa,cAC9CgB,EAAKnB,OAASC,EACdkB,EAAKnB,OAAOa,MAAMW,QAAUA,GAAW,OCWhCE,CAAiBJ,EAAGH,EAAMV,KAC/B,CAACU,EAAMV,IAGHkB,EAAcN,uBAClB,SAAAC,GAAC,ODbE,SACLC,EACAJ,EACAT,GAEA,IAAMT,EAASsB,EAAMtB,OACbD,EAAkBmB,EAAlBnB,OAAQK,EAAUc,EAAVd,MAChB,IAAIN,EAAmBC,EAAQC,IAC1BC,EAAiBD,IACjBG,EAAiBC,EAAOkB,EAAME,eAAnC,CAEA,IAAMG,EAAO5B,IAAWC,EAAO4B,mBACzBC,EAAa7B,EAAO8B,cAAgBH,EAAO,GAAK,GACtDlB,EAAqBA,GAAsB,IAC3CT,EAAOY,MAAMmB,WAAb,oBAAuCtB,EAAvC,cACAT,EAAOY,MAAMoB,UAAb,2BAA6CH,EAA7C,aCFOI,CAAiBZ,EAAGH,EAAMT,KAC/B,CAACS,EAAMT,IAGHyB,EAAad,uBAAY,SAAAC,GAAC,OAAIA,EAAEc,mBAAkB,IAElDC,EAAShB,uBAAY,SAAAC,GAAC,OAAIA,EAAEc,mBAAkB,IAE9CE,EAAcjB,uBAAY,SAAAC,GAAC,ODH5B,SACLC,EACAJ,GAEA,IAAMlB,EAASsB,EAAMtB,OACbD,EAAkBmB,EAAlBnB,OAAQK,EAAUc,EAAVd,MAChB,IAAIN,EAAmBC,EAAQC,IAC1BC,EAAiBD,IACjBG,EAAiBC,EAAOkB,EAAME,eAAnC,CAEA,IACMc,EADOvC,IAAWC,EAAO4B,mBACS,cAAgB,WACxD5B,EAAOY,MAAMmB,WAAb,wBACA/B,EAAOY,MAAMoB,UAAb,6BACAhC,EAAOuC,sBAAsBD,EAAUvC,ICXFyC,CAAiBnB,EAAGH,KAAO,CAACA,IAE3DuB,EAAYrB,uBAAY,SAAAC,GAAC,ODY1B,SACLC,EACAJ,GAEA,IAAMlB,EAASsB,EAAMtB,OADrB,EAE0BkB,EAAlBnB,EAFR,EAEQA,OAAQK,EAFhB,EAEgBA,MACXH,EAAiBD,IACjBG,EAAiBC,EAAOkB,EAAME,gBAC9BzB,IAELA,EAAOa,MAAMW,QAAU,MACvBL,EAAO,CAAEnB,OAAQ,KAAMK,MAAO,KCvBKsC,CAAerB,EAAGH,KAAO,CAACA,IAE7D,OACE,sCACEC,YAAaA,EACbO,YAAaA,EACbQ,WAAYA,EACZE,OAAQA,EACRC,YAAaA,EACbI,UAAWA,EACXE,iBAAgBpC,EAChBqC,aAAYxC,EACZQ,MAAOA,GACHC,GAEHH,ICzDQmC,EARqB,SAAC,GAA2B,IAAzBnC,EAAwB,EAAxBA,SAAaG,EAAW,4BAC7D,OACE,wCAAQA,EAAR,CAAciC,WAAS,IACpBpC,IC8DQqC,G,MAlEO,WACpB,IAAMpC,EAAQ,CACZ,CAAEqC,GAAI,EAAGC,QAAS,SAClB,CAAED,GAAI,EAAGC,QAAS,SAClB,CAAED,GAAI,EAAGC,QAAS,SAClB,CAAED,GAAI,EAAGC,QAAS,SAClB,CAAED,GAAI,EAAGC,QAAS,SAClB,CAAED,GAAI,EAAGC,QAAS,UAGpB,OACE,yBAAKC,UAAU,aACb,gDACA,yFACA,wBAAIA,UAAU,aAAd,YACA,wBAAIA,UAAU,oBACd,wBAAIA,UAAU,aAAd,eACA,kBAAC,EAAD,CACE3C,UAAU,WACVH,MAAM,SACNI,cAAc,MACdC,mBAAoB,IACpBE,MAAOA,EACPuC,UAAU,iBAETvC,EAAMwC,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,CAAYC,IAAG,aAAQD,EAAIJ,IAAME,UAAU,eACxCE,EAAIH,aAIX,wBAAIC,UAAU,aAAd,iBACA,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACE3C,UAAU,gBACVH,MAAM,SACNI,cAAc,MACdC,mBAAoB,IACpBE,MAAOA,EACPuC,UAAU,sBAETvC,EAAMwC,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,CAAYC,IAAG,cAASD,EAAIJ,IAAME,UAAU,eACzCE,EAAIH,aAIX,kBAAC,EAAD,CACE1C,UAAU,iBACVH,MAAM,SACNI,cAAc,MACdC,mBAAoB,IACpBE,MAAOA,EACPuC,UAAU,uBAETvC,EAAMwC,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,CAAYC,IAAG,eAAUD,EAAIJ,IAAME,UAAU,qBAC1CE,EAAIH,iB,MCzDnBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d13810db.chunk.js","sourcesContent":["function checkIsSameElement(\r\n  source: HTMLElement | null,\r\n  target: HTMLElement\r\n): boolean {\r\n  return source === target;\r\n}\r\n\r\nfunction checkIsDraggable(target: HTMLElement): boolean {\r\n  const isDraggable = target.getAttribute(\"draggable\") === \"true\";\r\n  return isDraggable;\r\n}\r\n\r\nfunction checkIsSameGroup(\r\n  group: string | null,\r\n  targetGroupElement: HTMLElement\r\n): boolean {\r\n  const targetGroup = targetGroupElement.getAttribute(\"data-group\");\r\n  return group === targetGroup;\r\n}\r\n\r\nexport function dragStartHandler(\r\n  event: React.DragEvent<HTMLElement>,\r\n  info: InfoOfDraggedElement,\r\n  opacity: string | undefined\r\n) {\r\n  const target = event.target as HTMLElement;\r\n  if (!checkIsDraggable(target)) return;\r\n\r\n  info.group = event.currentTarget.getAttribute(\"data-group\");\r\n  info.source = target;\r\n  info.source.style.opacity = opacity || \"0.4\";\r\n}\r\n\r\nexport function dragEnterHandler(\r\n  event: React.DragEvent<HTMLElement>,\r\n  info: InfoOfDraggedElement,\r\n  transitionDuration: number | undefined\r\n) {\r\n  const target = event.target as HTMLElement;\r\n  const { source, group } = info;\r\n  if (checkIsSameElement(source, target)) return;\r\n  if (!checkIsDraggable(target)) return;\r\n  if (!checkIsSameGroup(group, event.currentTarget)) return;\r\n\r\n  const isUp = source === target.nextElementSibling;\r\n  const dy: number = target.offsetHeight * (isUp ? 1 : -1);\r\n  transitionDuration = transitionDuration || 200;\r\n  target.style.transition = `transform ${transitionDuration}ms ease 0s`;\r\n  target.style.transform = `translate3d(0px, ${dy}px, 0px)`;\r\n}\r\n\r\nexport function dragLeaveHandler(\r\n  event: React.DragEvent<HTMLElement>,\r\n  info: InfoOfDraggedElement\r\n) {\r\n  const target = event.target as HTMLElement;\r\n  const { source, group } = info;\r\n  if (checkIsSameElement(source, target)) return;\r\n  if (!checkIsDraggable(target)) return;\r\n  if (!checkIsSameGroup(group, event.currentTarget)) return;\r\n\r\n  const isUp = source === target.nextElementSibling;\r\n  const position: InsertPosition = isUp ? \"beforebegin\" : \"afterend\";\r\n  target.style.transition = `transform 0ms ease 0s`;\r\n  target.style.transform = `translate3d(0px, 0px, 0px)`;\r\n  target.insertAdjacentElement(position, source as Element);\r\n}\r\n\r\nexport function dragEndHandler(\r\n  event: React.DragEvent<HTMLElement>,\r\n  info: InfoOfDraggedElement\r\n) {\r\n  const target = event.target as HTMLElement;\r\n  const { source, group } = info;\r\n  if (!checkIsDraggable(target)) return;\r\n  if (!checkIsSameGroup(group, event.currentTarget)) return;\r\n  if (!source) return;\r\n\r\n  source.style.opacity = \"1.0\";\r\n  info = { source: null, group: \"\" };\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport {\r\n  dragStartHandler,\r\n  dragEnterHandler,\r\n  dragLeaveHandler,\r\n  dragEndHandler\r\n} from \"./handlers\";\r\n\r\ninterface Props {\r\n  container: string;\r\n  group: string;\r\n  items: any[];\r\n  shadowOpacity?: string | undefined;\r\n  transitionDuration?: number;\r\n  [key: string]: any;\r\n}\r\n\r\nconst DnDContainer: React.FC<Props> = ({\r\n  container,\r\n  group,\r\n  shadowOpacity,\r\n  transitionDuration,\r\n  items,\r\n  children,\r\n  style,\r\n  ...rest\r\n}) => {\r\n  style = {\r\n    marginBlockStart: \"0px\",\r\n    marginBlockEnd: \"0px\",\r\n    paddingInlineStart: \"0px\",\r\n    listStyle: \"none\",\r\n    ...style\r\n  };\r\n\r\n  const info: InfoOfDraggedElement = {\r\n    source: null,\r\n    group: \"\"\r\n  };\r\n\r\n  const onDragStart = useCallback(\r\n    e => dragStartHandler(e, info, shadowOpacity),\r\n    [info, shadowOpacity]\r\n  );\r\n\r\n  const onDragEnter = useCallback(\r\n    e => dragEnterHandler(e, info, transitionDuration),\r\n    [info, transitionDuration]\r\n  );\r\n\r\n  const onDragOver = useCallback(e => e.preventDefault(), []);\r\n\r\n  const onDrop = useCallback(e => e.preventDefault(), []);\r\n\r\n  const onDragLeave = useCallback(e => dragLeaveHandler(e, info), [info]);\r\n\r\n  const onDragEnd = useCallback(e => dragEndHandler(e, info), [info]);\r\n\r\n  return (\r\n    <ul\r\n      onDragStart={onDragStart}\r\n      onDragEnter={onDragEnter}\r\n      onDragOver={onDragOver}\r\n      onDrop={onDrop}\r\n      onDragLeave={onDragLeave}\r\n      onDragEnd={onDragEnd}\r\n      data-container={container}\r\n      data-group={group}\r\n      style={style}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default DnDContainer;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\n\r\nconst DnDElement: React.FC<Props> = ({ children, ...rest }) => {\r\n  return (\r\n    <li {...rest} draggable>\r\n      {children}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DnDElement;\r\n","import React from \"react\";\r\n\r\nimport { DnDContainer, DnDElement } from \"./lib\";\r\nimport \"./App.css\";\r\n\r\nconst App: React.FC = () => {\r\n  const items = [\r\n    { id: 1, content: \"item1\" },\r\n    { id: 2, content: \"item2\" },\r\n    { id: 3, content: \"item3\" },\r\n    { id: 4, content: \"item4\" },\r\n    { id: 5, content: \"item5\" },\r\n    { id: 6, content: \"item6\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>hj-drag-and-drop</h1>\r\n      <h2>Typescript-based react library for sortable drag and drop</h2>\r\n      <h2 className=\"sub-title\">Examples</h2>\r\n      <hr className=\"horizontal-line\" />\r\n      <h3 className=\"sub-title\">Single List</h3>\r\n      <DnDContainer\r\n        container=\"example1\"\r\n        group=\"group1\"\r\n        shadowOpacity=\"0.6\"\r\n        transitionDuration={300}\r\n        items={items}\r\n        className=\"dnd-container\"\r\n      >\r\n        {items.map(obj => (\r\n          <DnDElement key={`###${obj.id}`} className=\"dnd-element\">\r\n            {obj.content}\r\n          </DnDElement>\r\n        ))}\r\n      </DnDContainer>\r\n      <h3 className=\"sub-title\">Multiple List</h3>\r\n      <div className=\"example2\">\r\n        <DnDContainer\r\n          container=\"example2-left\"\r\n          group=\"group2\"\r\n          shadowOpacity=\"0.6\"\r\n          transitionDuration={300}\r\n          items={items}\r\n          className=\"dnd-container-left\"\r\n        >\r\n          {items.map(obj => (\r\n            <DnDElement key={`####${obj.id}`} className=\"dnd-element\">\r\n              {obj.content}\r\n            </DnDElement>\r\n          ))}\r\n        </DnDContainer>\r\n        <DnDContainer\r\n          container=\"example2-right\"\r\n          group=\"group2\"\r\n          shadowOpacity=\"0.6\"\r\n          transitionDuration={300}\r\n          items={items}\r\n          className=\"dnd-container-right\"\r\n        >\r\n          {items.map(obj => (\r\n            <DnDElement key={`#####${obj.id}`} className=\"dnd-element-right\">\r\n              {obj.content}\r\n            </DnDElement>\r\n          ))}\r\n        </DnDContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}